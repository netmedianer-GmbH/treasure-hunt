{"version":3,"file":"component---src-pages-install-js-f1c5f289982eda2d026e.js","mappings":"kMA4CA,EAzCqB,WAAO,IAAD,IACvB,GAAgCA,EAAAA,EAAAA,UAAS,IAAlCC,EAAP,KAAiBC,EAAjB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WAKN,OAJAC,MAAM,wEACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIN,EAAYM,MAEvB,eAGR,IAGC,uBAAKC,UAAU,kCACX,sBAAIA,UAAU,iBAAd,+CACA,qBAAGA,UAAU,2CAAb,oIAIA,sBAAIA,UAAU,gBAAd,6BACA,sBAAIA,UAAU,oCAAd,UAEIR,EAAS,UAFb,aAEI,EAAaS,OAAOC,KAAI,SAACC,EAAOC,GAAR,MACG,sEAAvBD,EAAME,cACH,sBAAIC,IAAKF,GAAK,qBAAGJ,UAAU,2BAA2BO,KAAMJ,EAAMK,sBAAuBL,EAAMM,WAI1G,sBAAIT,UAAU,gBAAd,wCACA,sBAAIA,UAAU,oCAAd,UAEIR,EAAS,UAFb,aAEI,EAAaS,OAAOC,KAAI,SAACC,EAAMC,GAAP,MACG,oBAAvBD,EAAME,cACH,sBAAIC,IAAKF,GAAK,qBAAGJ,UAAU,2BAA2BO,KAAMJ,EAAMK,sBAAuBL,EAAMM,aC9BhHC,EAAc,4DA0EpB,EAxEoB,SAAC,GAAc,IAAZX,EAAW,EAAXA,KACnB,GAAoCR,EAAAA,EAAAA,UAAS,GAAtCoB,EAAP,KAAmBC,EAAnB,KAMMC,EAHOd,EAAKe,kBAAkBC,MAAMJ,GAAYK,KAAKC,KAItDC,QAHM,YAGM,8EACZA,QAHM,iBAGM,mFAEjB,OAAO,gBAACC,EAAA,EAAD,KACH,wBAAMnB,UAAU,iBACZ,uBAAKA,UAAU,kCACX,uBAAKA,UAAU,4BACX,sBAAIA,UAAU,iCAAd,sBACA,2BAASoB,GAAG,QAAQpB,UAAU,SAC1B,uBAAKA,UAAU,YACX,uBAAKA,UAAU,mCACX,0BAAQqB,QAAS,kBAAMT,EAAc,IACjCZ,UAAW,4FAA6G,IAAfW,EAAmBD,EAAc,KACzIX,EAAKe,kBAAkBC,MAAM,GAAGC,KAAKM,YAAYC,WAEtD,0BAAQF,QAAS,kBAAMT,EAAc,IACjCZ,UAAW,4FAA6G,IAAfW,EAAmBD,EAAc,KACzIX,EAAKe,kBAAkBC,MAAM,GAAGC,KAAKM,YAAYC,WAEtD,0BAAQF,QAAS,kBAAMT,EAAc,IACjCZ,UAAW,4FAA6G,IAAfW,EAAmBD,EAAc,KACzIX,EAAKe,kBAAkBC,MAAM,GAAGC,KAAKM,YAAYC,WAEtD,0BAAQF,QAAS,kBAAMT,EAAc,IACjCZ,UAAW,4FAA6G,IAAfW,EAAmBD,EAAc,KACzIX,EAAKe,kBAAkBC,MAAM,GAAGC,KAAKM,YAAYC,YAI1D,uBACIvB,UAAU,iCACVwB,wBAAyB,CAAEC,OAAQZ,KAKpB,IAAfF,GACA,gBAAC,EAAD","sources":["webpack://treasure-hunt-site/./src/components/ReleaseFiles.js","webpack://treasure-hunt-site/./src/pages/install.js"],"sourcesContent":["//https://api.github.com/repos/netmedianer-GmbH/treasure-hunt/releases\nimport React, { useEffect, useState } from 'react';\n\nconst ReleaseFiles = () => {\n    const [releases, setReleases] = useState({});\n\n    useEffect(() => {\n        fetch(\"https://api.github.com/repos/netmedianer-GmbH/treasure-hunt/releases\")\n            .then(response => response.json())\n            .then(data => setReleases(data));\n\n        return () => {\n            // Clean up the subscription\n        };\n    }, []);\n\n    return (\n        <div className=\"pt-12 px-10 lg:px-24 text-left\">\n            <h2 className=\"text-2xl my-4\">Download the latest release files from here</h2>\n            <p className=\"mt-2 text-lg font-light leading-relaxed\">\n                Instead of downloading the installation files from our Github page, you can also download the latest release directly from here.\n            </p>\n \n            <h3 className=\"text-xl mt-4\">The Microsoft Excel Files</h3>\n            <ul className=\"list-disc text-lg pl-6 py-4 ml-4\">\n            {\n                releases[0]?.assets.map((asset, idx) =>\n                    asset.content_type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n                    && <li key={idx}><a className=\"no-underline shadow-link\" href={asset.browser_download_url}>{asset.name}</a></li>)\n            }\n            </ul>\n\n            <h3 className=\"text-xl mt-4\">The PowerApps Canvas App Import File</h3>\n            <ul className=\"list-disc text-lg pl-6 py-4 ml-4\">\n            {\n                releases[0]?.assets.map((asset,idx) =>\n                    asset.content_type === \"application/zip\"\n                    && <li key={idx}><a className=\"no-underline shadow-link\" href={asset.browser_download_url}>{asset.name}</a></li>)\n            }\n            </ul>\n        </div>\n    )\n};\n\nexport default ReleaseFiles;","import React, { useState } from 'react';\n\nimport Layout from '../components/layout/Layout';\nimport ReleaseFiles from '../components/ReleaseFiles';\n\nimport { graphql } from 'gatsby';\n\nconst selectedCss = \" text-indigo-500 border-b-2 font-medium border-indigo-600\";\n\nconst InstallPage = ({ data }) => {\n    const [currentTab, setCurrentTab] = useState(0);\n\n    // Patchig the generated md-html\n    const html = data.allMarkdownRemark.edges[currentTab].node.html;\n    const r1 = /.\\/img\\//g;\n    const r2 = /.\\/img_user\\//g;\n    const patchedHTML = html\n        .replace(r1, \"https://raw.githubusercontent.com/wiki/netmedianer-GmbH/treasure-hunt/img/\")\n        .replace(r2, \"https://raw.githubusercontent.com/wiki/netmedianer-GmbH/treasure-hunt/img_user/\");\n\n    return <Layout>\n        <main className=\"text-gray-900\">\n            <div className=\"container mx-auto px-8 lg:flex\">\n                <div className=\"text-center lg:text-left\">\n                    <h1 className=\"pt-20 text-3xl my-4 text-left\">Installation Guide</h1>\n                    <section id=\"start\" className=\"py-12\">\n                        <div className=\"bg-white\">\n                            <nav className=\"flex flex-col sm:flex-row px-10\">\n                                <button onClick={() => setCurrentTab(0)}\n                                    className={\"uppercase text-sm text-gray-600 py-4 px-6 block hover:text-indigo-800 focus:outline-none\" + (currentTab === 0 ? selectedCss : \"\")}>\n                                    {data.allMarkdownRemark.edges[0].node.frontmatter.tab_title}\n                                </button>\n                                <button onClick={() => setCurrentTab(1)}\n                                    className={\"uppercase text-sm text-gray-600 py-4 px-6 block hover:text-indigo-800 focus:outline-none\" + (currentTab === 1 ? selectedCss : \"\")}>\n                                    {data.allMarkdownRemark.edges[1].node.frontmatter.tab_title}\n                                </button>\n                                <button onClick={() => setCurrentTab(2)}\n                                    className={\"uppercase text-sm text-gray-600 py-4 px-6 block hover:text-indigo-800 focus:outline-none\" + (currentTab === 2 ? selectedCss : \"\")}>\n                                    {data.allMarkdownRemark.edges[2].node.frontmatter.tab_title}\n                                </button>\n                                <button onClick={() => setCurrentTab(3)}\n                                    className={\"uppercase text-sm text-gray-600 py-4 px-6 block hover:text-indigo-800 focus:outline-none\" + (currentTab === 3 ? selectedCss : \"\")}>\n                                    {data.allMarkdownRemark.edges[3].node.frontmatter.tab_title}\n                                </button>\n                            </nav>\n\n                            <div\n                                className=\"pt-12 px-10 lg:px-24 text-left\"\n                                dangerouslySetInnerHTML={{ __html: patchedHTML }}>\n                            </div>\n                            {\n                                // On tab 0 we also render the downloadable release files\n                                // via the github api\n                                currentTab === 0 &&\n                                <ReleaseFiles />\n                            }\n                        </div>\n                    </section>\n                </div>\n            </div>\n        </main>\n    </Layout>\n};\n\nexport const query = graphql`\nquery InstallFilesQuery {\n    allMarkdownRemark(sort: {fields: frontmatter___install_step}, filter: {frontmatter: {install_step: {gte: 1}}}) {\n    edges {\n      node {\n        frontmatter {\n          install_step\n          tab_title\n        }\n        fileAbsolutePath\n        html\n      }\n    }\n  }\n  }\n`;\n\nexport default InstallPage;\n"],"names":["useState","releases","setReleases","useEffect","fetch","then","response","json","data","className","assets","map","asset","idx","content_type","key","href","browser_download_url","name","selectedCss","currentTab","setCurrentTab","patchedHTML","allMarkdownRemark","edges","node","html","replace","Layout","id","onClick","frontmatter","tab_title","dangerouslySetInnerHTML","__html"],"sourceRoot":""}